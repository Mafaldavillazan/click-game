{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","components/NavBar.js","components/Jumbotron.js","components/Card.js","components/RenderPage.js","App.js","index.js"],"names":["ImageCard","props","className","onClick","checkClick","id","key","alt","name","src","image","Wrapper","children","NavBar","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","score","winningScore","message","Jumbotron","CardDisplay","state","imagesData","count","winningCount","selectedValues","arr","length","includes","setState","shuffleImages","push","sort","Math","random","this","map","results","React","Component","BootstrapRender","Card","App","ReactDOM","render","document","getElementById"],"mappings":"igDAaeA,MAVf,SAAmBC,GACjB,OACE,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MAC1D,yBAAKH,UAAU,iBACb,yBAAKG,GAAIJ,EAAMI,GAAIC,IAAKL,EAAMI,GAAIE,IAAKN,EAAMO,KAAMC,IAAKR,EAAMS,W,MCAvDC,MAJf,SAAiBV,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMW,WCyB1BC,MA3Bf,SAAgBZ,GACZ,OACI,yBAAKC,UAAU,iDACX,uBAAGA,UAAU,eAAeY,KAAK,KAAjC,8BACA,4BAAQZ,UAAU,iBAAiBa,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACxJ,0BAAMlB,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BG,GAAG,aACzC,wBAAIH,UAAU,cACV,wBAAIA,UAAU,mBACV,uBAAGA,UAAU,WAAWY,KAAK,KAA7B,UAAyCb,EAAMoB,QAGnD,wBAAInB,UAAU,mBACV,uBAAGA,UAAU,WAAWY,KAAK,KAA7B,cAA6Cb,EAAMqB,eAGvD,wBAAIpB,UAAU,mBACV,uBAAGA,UAAU,WAAWY,KAAK,KAAKb,EAAMsB,cCTjDC,MATf,WACI,OACI,yBAAKtB,UAAU,aACX,iDACA,iECoEGuB,E,2MA9DXC,MAAQ,CACJC,aACAC,MAAO,EACPC,aAAc,EACdC,eAAgB,GAChBP,QAAS,I,EAIbnB,WAAa,SAAAC,GACT,IAAI0B,EAAM,EAAKL,MAAMI,eAErB,GAAKC,EAAIC,OAMJ,CACD,IAAMN,EAAQ,EAAKA,MACfK,EAAIE,SAAS5B,IACb,EAAK6B,SAAS,CAAEJ,eAAgB,KAChC,EAAKI,SAAS,CAAEN,MAAOF,EAAME,MAAQF,EAAME,QACvCF,EAAME,MAAQF,EAAMG,cACpB,EAAKK,SAAS,CAAEL,aAAcH,EAAME,QAExC,EAAKO,cAAcR,GACnB,EAAKO,SAAS,CAAEX,QAAS,gBAKzB,EAAKW,SAAS,CAAEN,MAAOF,EAAME,MAAQ,IACrC,EAAKM,SAAS,CAAEH,IAAKL,EAAMI,eAAeM,KAAK/B,KAC/C,EAAK8B,cAAcR,SArBvB,EAAKO,SAAS,CAAEH,IAAK,EAAKL,MAAMI,eAAeM,KAAK/B,KACpD,EAAK6B,SAAS,CAAEN,MAAO,EAAKF,MAAME,MAAQ,IAC1C,EAAKO,cAAcR,GACnB,EAAKO,SAAS,CAAEX,QAAS,M,EAuBjCY,cAAgB,SAACR,GAAD,OAAgBA,EAAWU,KAAK,kBAAMC,KAAKC,SAAW,M,wEAG5D,IAAD,OACL,OACI,6BACI,kBAAC,EAAD,CAAQhB,QAASiB,KAAKd,MAAMH,QAASF,MAAOmB,KAAKd,MAAME,MAAON,aAAckB,KAAKd,MAAMG,eACvF,kBAAC,EAAD,MACA,kBAAC,EAAD,KACKW,KAAKd,MAAMC,WAAWc,IAAI,SAAAC,GAAO,OAC9B,kBAAC,EAAD,eACIpC,IAAKoC,EAAQrC,GACbD,WAAY,EAAKA,YACbsC,Y,GArDNC,IAAMC,WCAjBC,MARf,WACI,OACI,yBAAK3C,UAAU,aACX,kBAAC4C,EAAD,QCEGC,MAJf,WACE,OAAO,kBAAC,EAAD,OCDTC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f15e9086.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction ImageCard(props) {\n  return (\n    <div className=\"card\" onClick={() => props.checkClick(props.id)}>\n      <div className=\"img-container\" >\n        <img id={props.id} key={props.id} alt={props.name} src={props.image}/>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\n\nfunction NavBar(props) {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"/\">The ultimate clicking game</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"/\">Score: {props.score}</a>\n                    </li>\n\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"/\">Top Score: {props.winningScore}</a>\n                    </li>\n\n                    <li className=\"nav-item active\">\n                        <p className=\"nav-link\" href=\"/\">{props.message}</p>\n                    </li>\n\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBar;\n","import React from \"react\";\n\nfunction Jumbotron() {\n    return (\n        <div className=\"jumbotron\">\n            <h1>Ready, Set, PLAY!</h1>\n            <p>Click an image to begin playing!</p>\n        </div>\n    );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport imagesData from \"../paints.json\";\nimport ImageCard from \"./ImageCard\";\nimport Wrapper from \"./Wrapper\";\nimport NavBar from \"./NavBar.js\";\nimport Jumbotron from \"./Jumbotron.js\";\n\n\n\n\n//Creating a class that changes from something to random\nclass CardDisplay extends React.Component {\n    state = {\n        imagesData,\n        count: 0,\n        winningCount: 0,\n        selectedValues: [],\n        message: \"\"\n    };\n\n\n    checkClick = id => {\n        let arr = this.state.selectedValues\n\n        if (!arr.length) {\n            this.setState({ arr: this.state.selectedValues.push(id) });\n            this.setState({ count: this.state.count + 1 });\n            this.shuffleImages(imagesData)\n            this.setState({ message: \"\" })\n        }\n        else {\n            const state = this.state\n            if (arr.includes(id)) {\n                this.setState({ selectedValues: [] });\n                this.setState({ count: state.count - state.count });\n                if (state.count > state.winningCount) {\n                    this.setState({ winningCount: state.count })\n                }\n                this.shuffleImages(imagesData)\n                this.setState({ message: \"YOU LOOSE\" })\n                \n            }\n            else {\n\n                this.setState({ count: state.count + 1 });\n                this.setState({ arr: state.selectedValues.push(id) });\n                this.shuffleImages(imagesData)\n            }\n        }\n    };\n\n    shuffleImages = (imagesData) => imagesData.sort(() => Math.random() - 0.5);\n\n\n    render() {\n        return (\n            <div>\n                <NavBar message={this.state.message} score={this.state.count} winningScore={this.state.winningCount} />\n                <Jumbotron />\n                <Wrapper>\n                    {this.state.imagesData.map(results => (\n                        <ImageCard\n                            key={results.id}\n                            checkClick={this.checkClick}\n                            {...results}\n                        />\n                    ))}\n                </Wrapper>\n            </div>\n        );\n    }\n\n}\n\nexport default CardDisplay;\n","import React from \"react\";\nimport CardDisplay from \"./Card\";\n\nfunction BootstrapRender() {\n    return (\n        <div className=\"container\">\n            <CardDisplay />\n        </div>\n    );\n}\n\nexport default BootstrapRender;\n","import React from \"react\";\n\nimport Component from \"./components/RenderPage\"\n\nfunction App() {\n  return <Component/>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}